syntax = "proto3";
package usersgrpc;

message User {
    string userID = 1;
    string username = 2;
    int32 mmr = 3;
    int32 level = 4;
    int32 goals = 5;
    int32 topGoalSpeed = 6;
    repeated string achievements = 7;
    PrivateData privateData = 8;
    ProtectedData protectedData = 9;
}

message PrivateData {
    string firstname = 1;
    string lastname = 2;
    string email = 3;
    string created = 4;
    string cardID = 5;
    string cardExpiryDate = 6;
    string cardPIN = 7;
    string creditCardType = 8;
    string creditCardNumber = 9;
    string creditCardExpiryDate = 10;
    string creditCardSecurityCode = 11;
}

message ProtectedData {
    string color = 1;
    string avatarURL = 2;
    string userType = 3;
    string city = 4;
    string country = 5;
    string birthday = 6;
}

// message Friend {
//     string _key = 1;
//     string _from = 2;
//     string _to = 3;
//     string datetimeRequest = 4;
//     string datetimeAccepted = 5;
//     boolean accepted = 6;
// }

// // simple REST CRUD on Users
// service UsersService {
//     rpc CreateUser(UserRequest) returns (UsersResponse) {
//         option (google.api.http) = {
//             post: "/users"
//             body: "user"
//         };
//     }; 
//     rpc GetUser(UserRequest) returns (User) {
//         option (google.api.http) = {
//             get: "/users/{userID}"
//         };
//     };
//     rpc UpdateUser(UserRequest) returns (UsersResponse) {
//         option (google.api.http) = {
//             put: "/users/{userID}"
//             body: "user"
//         };
//     };
//     rpc DeleteUser(UserRequest) returns (UsersResponse) {
//         option (google.api.http) = {
//             delete: "/users/{userID}"
//         };
//     };
// }

// UsersSevice is responsible for handling CRUD operations on User objects. 
service UsersService {
    rpc CreateUser(User) returns (UsersReply) {};
    rpc ReadUser(UsersRequest) returns (User) {};
    rpc UpdateUser(User) returns (UsersReply) {};
    rpc DeleteUser(UsersRequest) returns (UsersReply) {};
}

message UsersReply {
    int32 code = 1;
}

message UsersRequest {
    string userID = 1;
}




